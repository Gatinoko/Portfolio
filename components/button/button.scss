@use '../../styles/modules.scss' as *;

.button {
	@include flex-horizontal-layout;
	@include flex-layout-perfectly-centered;
	background-color: get-color-value(white-ffffff-5);
	text-transform: uppercase;
	padding: 0px;
	border: 0px;
	user-select: none;
	fill: get-color-value(white-ffffff);
	color: get-color-value(white-ffffff);

	/*
		Sizes
	*/
	&.extra-large {
		@include interface-xl;
		border-radius: get-radius-value(radius-13);
		gap: get-spacing-value(spacing-32);
		padding: get-spacing-value(spacing-16) get-spacing-value(spacing-24);
	}
	&.large {
		@include interface-l;
		border-radius: get-radius-value(radius-13);
		gap: get-spacing-value(spacing-24);
		padding: get-spacing-value(spacing-16) get-spacing-value(spacing-24);
	}
	&.regular {
		@include interface-r;
		border-radius: get-radius-value(radius-9);
		gap: get-spacing-value(spacing-16);
		padding: get-spacing-value(spacing-8) get-spacing-value(spacing-24);
	}
	&.small {
		@include interface-s;
		border-radius: get-radius-value(radius-7);
		gap: get-spacing-value(spacing-16);
		padding: get-spacing-value(spacing-8) get-spacing-value(spacing-24);
	}
	&.extra-small {
		@include interface-xs;
		border-radius: get-radius-value(radius-7);
		gap: get-spacing-value(spacing-16);
		padding: get-spacing-value(spacing-8) get-spacing-value(spacing-24);
	}

	/*
		Variants
	*/
	&.flat {
		background-color: transparent;
	}

	/*
		States
	*/
	@media (hover: hover) {
		&:hover {
			// CSS transition properties
			transition: background-color 150ms;
			transition-timing-function: cubic-bezier(0, 0, 0.25, 1);
			background-color: get-color-value(white-ffffff-15);
		}
	}
	&:active {
		background-color: rgb(0, 153, 255);
	}
	&:disabled {
		.icon {
			fill: get-component-color-value(disabled);
		}
		color: get-component-color-value(disabled);
		text-decoration: none;
		pointer-events: none;
	}
}
